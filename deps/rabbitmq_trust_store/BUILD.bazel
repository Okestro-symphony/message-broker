load("@rules_erlang//:xref.bzl", "xref")
load("@rules_erlang//:dialyze.bzl", "dialyze", "plt")
load("//:rabbitmq_home.bzl", "rabbitmq_home")
load("//:rabbitmq_run.bzl", "rabbitmq_run")
load(
    "//:rabbitmq.bzl",
    "RABBITMQ_DIALYZER_OPTS",
    "assert_suites",
    "rabbitmq_app",
    "rabbitmq_integration_suite",
)

APP_NAME = "rabbitmq_trust_store"

APP_DESCRIPTION = "Client X.509 certificates trust store"

APP_MODULE = "rabbit_trust_store_app"

APP_ENV = """[
	    {default_refresh_interval, 30},
	    {providers, [rabbit_trust_store_file_provider]}
	  ]"""

EXTRA_APPS = [
    "ssl",
    "crypto",
    "public_key",
]

DEPS = [
    "//deps/rabbit_common:erlang_app",
    "@lager//:erlang_app",
]

RUNTIME_DEPS = [
    "//deps/rabbit:erlang_app",
]

rabbitmq_app(
    app_description = APP_DESCRIPTION,
    app_env = APP_ENV,
    app_module = APP_MODULE,
    app_name = APP_NAME,
    extra_apps = EXTRA_APPS,
    first_srcs = [
        "src/rabbit_trust_store_certificate_provider.erl",
    ],
    runtime_deps = RUNTIME_DEPS,
    deps = DEPS,
)

xref(tags = ["xref"])

plt(
    name = "base_plt",
    apps = EXTRA_APPS,
    plt = "//:base_plt",
    deps = DEPS,
)

dialyze(
    dialyzer_opts = RABBITMQ_DIALYZER_OPTS,
    plt = ":base_plt",
    tags = ["dialyze"],
    warnings_as_errors = False,
)

rabbitmq_home(
    name = "broker-for-tests-home",
    plugins = [
        "//deps/rabbit:erlang_app",
        ":erlang_app",
        "//deps/amqp_client:erlang_app",
        "@ct_helper//:erlang_app",
    ],
)

rabbitmq_run(
    name = "rabbitmq-for-tests-run",
    home = ":broker-for-tests-home",
)

PACKAGE = "deps/rabbitmq_trust_store"

suites = [
    rabbitmq_integration_suite(
        PACKAGE,
        name = "config_schema_SUITE",
    ),
    rabbitmq_integration_suite(
        PACKAGE,
        name = "system_SUITE",
        flaky = True,
        runtime_deps = [
            "@ct_helper//:erlang_app",
            "@trust_store_http//:erlang_app",
        ],
    ),
]

assert_suites(
    suites,
    glob(["test/**/*_SUITE.erl"]),
)
